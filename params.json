{"name":"Malwarez","tagline":"Malware visualization on earth map","body":"MalwareZ\r\n========\r\n\r\nMalware visualization on earth map\r\n\r\n## Aim\r\nThe aim was to provide real time visualization of malware activities with historical data.\r\nHere is a sample demo:\r\n\r\n## How to install\r\n* Before installation please make sure that your system has necessary packages installed.\r\n* For Ubuntu:\r\n    sudo apt-get install build-essential python-dev libevent-dev libmysqlclient-dev python-virtualenv\r\n* virtualenv env-demo --no-site-packages (tested with version 1.9.1)\r\n* cd env-demo\r\n* source bin/activate\r\n* git clone https://github.com/YakindanEgitim/malwarez.git\r\n* cd malwarez\r\n* git checkout devel\r\n* pip install -r pip_requirements.txt\r\n* open prepareDB.sh and set root username (password will be prompted during execution) also set the variables to create new db & user, such as hostname, database, username & password\r\n* ./prepareDB.sh\r\n* update settings.py with info from prepareDB.sh\r\n* ./manage.py syncdb\r\n* ./run.py &\r\n* ./scripts/hpfeeds/feedReader.py &\r\n\r\n## How to run\r\nBy default it is running on port 80.\r\njust open localhost on your browser and that's it.\r\n\r\n## FAQ\r\nHow to change port number of server?\r\n* 2 files should be changed. Both of the following variable values should be same otherwise new events does not shows up.\r\n* run.py: change the value of PORT variable\r\n* scripts/hpfeeds/feedReader.py: change the value of socketIOPort\r\n\r\nI added a script but can not find modules although they are installed in virtualenv.\r\n* check the python interpreter line. don not use #!/usr/bin/python which is system's interpreter not the virtual-env's. Use #!/usr/bin/env python\r\n\r\n## Tools\r\nThis project uses following libraries/projects. Thanks for their great work...\r\n\r\nShowing Fancy SVG maps\r\n* Kartograph.js: (http://kartograph.org/docs/kartograph.js/)\r\n* RaphaÃ«l: (http://raphaeljs.com/\")\r\n* Chroma: (https://github.com/gka/chroma.js)\r\n\r\nRealtime Data Support\r\n* Socket.io: (http://socket.io/)\r\n\r\nFor web front-end:\r\n* Django: (https://www.djangoproject.com/)\r\n\r\nDB backend\r\n* MySQL-Python: (https://github.com/farcepest/MySQLdb1)\r\n\r\nSocket.io Django Integration\r\n* Gevent: (http://www.gevent.org/)\r\n* Gevent-Socketio: (https://github.com/abourget/gevent-socketio)\r\n* Gevent-Websocket: (https://github.com/abourget/gevent-websocket)\r\n\r\nRestful API\r\n* Django-Tastypie: (http://tastypieapi.org/)\r\n\r\nCollecting hpfeeds data and sending realtime data to server over socket.io\r\n* Hpfeeds: (https://github.com/rep/hpfeeds)\r\n* SocketIO-Client: (https://pypi.python.org/pypi/socketIO-client)\r\n\r\nGenerating both 2D and 3D SVG maps\r\n* Kartograph.py: (http://kartograph.org/docs/kartograph.py/)\r\n\r\nGeo-Location Services\r\n* This product includes GeoLite data created by MaxMind, available from (http://www.maxmind.com)\r\n* Pygeoip: (http://code.google.com/p/pygeoip/)\r\n\r\nGeneral Purpose :)\r\n* JQuery: (http://jquery.com/)\r\n* Script: (https://github.com/ded/script.js)\r\n\r\nNice Layout :)\r\n* Twitter Bootstrap: (http://twitter.github.io/bootstrap/) [Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}