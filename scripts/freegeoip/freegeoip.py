#!/usr/bin/python

# ipdb.sqlite generated by freegeoip project's updatedb command. https://github.com/fiorix/freegeoip
import sqlite3 as lite
import sys
import random
import pygeoip

def getIPRangeListByCity(cityName):
    SQL_FILE='ipdb.sqlite'
    SQL_QUERY='SELECT ip_start, ip_end, city_name FROM city_blocks, city_location WHERE city_name LIKE ? AND city_blocks.loc_id=city_location.loc_id'
    con = lite.connect(SQL_FILE)

    ip_start = 0
    ip_end = 1

    rangeList = []

    with con:
        cur = con.cursor()
        cur.execute(SQL_QUERY, (cityName,))
        rows = cur.fetchall()
        for row in rows:
            sip = row[ip_start]
            eip = row[ip_end]
            rangeList.append((sip, eip))

    return rangeList

def convertToIPNum(ipStr):
    octets = ipStr.split('.')
    ip_num = (  (int(octets[0]) << 24)
                + (int(octets[1]) << 16)
                + (int(octets[2]) << 8 )
                + (int(octets[3]))
            )

    return ip_num

def convertToIPStr(ipNum) :
    o1 = str((ipNum >> 24) & 0xFF)
    o2 = str((ipNum >> 16) & 0xFF)
    o3 = str((ipNum >> 8 ) & 0xFF)
    o4 = str((ipNum      ) & 0xFF)

    address = o1 + '.' + o2 + '.' + o3 + '.' + o4
    return address

def getRandomIPByCity(city_name, count=0) :
    ip_range=getIPRangeListByCity(city_name)

    rIP = []
    for x in xrange(1, count) :
        i = random.randint(0, len(ip_range))
        start_ip = ip_range[i][0]
        end_ip = ip_range[i][1]

        rIP.append(random.randint(start_ip, end_ip))

    return rIP


def getCityInfoByIp(ipAddr):
    gi = pygeoip.GeoIP('../geolite/GeoLiteCity.dat', pygeoip.MEMORY_CACHE)
    return gi.record_by_addr(ipAddr)

if __name__ == '__main__':

    for rip in getRandomIPByCity('New York', 10) :
        ripStr = convertToIPStr(rip)
        print ripStr, ' -- ', getCityInfoByIp(ripStr)
