#!/usr/bin/python
# -- coding: utf-8 --

if __name__ == '__main__' :

    import json
    import sys
    import time
    import os
    import django
    from subprocess import PIPE, STDOUT, Popen, call

    sPath=os.path.dirname(os.path.realpath(__file__))+'/'
    sys.path.append(sPath+'../../../lib/python2.7/site-packages/')
    sys.path.append(sPath+'../freegeoip/')
    sys.path.append(sPath+'../../')

    from socketIO_client import SocketIO
    import freegeoip

    # Set the DJANGO_SETTINGS_MODULE environment variable.
    os.environ['DJANGO_SETTINGS_MODULE'] = "malwarez.settings"
    from web.models import Feed

    HPFRIENDS='hpfeeds-client'
    DUMMY_HPFRIENDS=sPath + 'dummyGenerator.py'

    selected_feedSource = DUMMY_HPFRIENDS

    accountFile = open(sPath+'hpfriends.json', 'r')
    account = json.load(accountFile)


    socketIO = SocketIO('127.0.0.1', 8000)
    chatSocket = socketIO.connect('/new-event')

    cmd = [selected_feedSource,
           '-i', str(account['user']),
           '-s', str(account['pass']),
           '--host', str(account['host']),
           '-p', str(account['port']),
           '-c', str(account['capture']),
           str(account['action'])]

    pHpf=Popen(cmd, stdout=PIPE)
    #feedStdout, feedStderror = pHpf.communicate()
    feedStdout = pHpf.stdout
    while True:
        newFeed = feedStdout.readline()
        #print '> ', newFeed
        if newFeed:
            data = json.loads(newFeed)
            f = Feed(url=data['url'], daddr=data['daddr'],
                    saddr=data['saddr'], sport=data['sport'],
                    dport=data['dport'], sha512=data['sha512'],
                    md5=data['md5'], longitude=-1,
                    latitude=-1, city=u'', country=u'')

            info = freegeoip.getCityInfoByIp(f.saddr)
            if info:
                print 'info:', info
                f.longitude=info['longitude']
                f.latitude=info['latitude']
                f.country = info['country_code3']

                city = info['city']
#                print 'city: ', city
                if city:
                    try:
                        city = city.decode('utf-8', 'ignore')
                    except:
                        city = ''

                    f.city=city

                coordinate = "{ \"city\":\"%s\", \"x\": \"%f\", \"y\": \"%f\"}" % (f.city, info['longitude'], info['latitude'])
                chatSocket.emit('update', coordinate)

            f.save()

    #print 'cmd: ', cmd

    # socketIO = SocketIO('127.0.0.1', 8000)
    # chatSocket = socketIO.connect('/new-event')
    #
    # i=0
    # while True:
    #     i += 1
    #     chatSocket.emit('update', {'x': (40 + i)%100, 'y': 40})
    #     time.sleep(1.5)
    #     print 'update sent.'
    #
    # #socketIO.emit('aaa', {'bbb': 'ccc'})
    # socketIO.wait()
