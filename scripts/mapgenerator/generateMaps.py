#!/usr/bin/python
from xml.dom import minidom
from subprocess import call
import sys, os

def createJSON(countryCode, boxInfo):
    f = open('input/country-template.json', 'r')
    jsonData = f.read()

    newJSON = jsonData.replace('$$countryCode$$', countryCode)\
        .replace('$$w$$', boxInfo['w'])\
        .replace('$$id$$', countryCode.lower())\
        .replace('$$e$$', boxInfo['e'])\
        .replace('$$n$$', boxInfo['n'])\
        .replace('$$s$$', boxInfo['s'])\
        .replace('$$lon0$$', boxInfo['lon0'])\
        .replace('$$lat0$$', boxInfo['lat0'])

    jsonFile = 'map-'+countryCode.lower()+'.json'

    print "generating %s"%jsonFile, ' ',
    out = open('json/'+jsonFile, 'w')
    out.write(newJSON)
    out.flush()
    out.close()

    f.close()

def getCountryBoxes():
    def getData(node, tag):
        xmlDomObj = node.getElementsByTagName(tag)[0]
        return xmlDomObj.firstChild.data

    countryInfoXML = 'input/countryInfo.xml'
    xmldoc = minidom.parse(countryInfoXML)
    countries=xmldoc.getElementsByTagName('country')

    r = {}
    for c in countries:
        countryCode=getData(c, 'isoAlpha3')
        w = float(getData(c, 'west'))
        e = float(getData(c, 'east'))
        s = float(getData(c, 'south'))
        n = float(getData(c, 'north'))

        lon0 = str(w + (abs(w - e) / 2))
        lat0 = str(s - (abs(n - s) * 4))

        w=str(w - 1)
        e=str(e + 1)
        s=str(s - 1)
        n=str(n + 1)
        r[countryCode]={"w":w,"e":e,"n":n,"s":s,"lon0":lon0,"lat0":lat0}

    return r

def getCountryCodes():
    selectedFeature = 'data-adm0-a3'

    svgFile = 'input/world-detailed2.svg'
    xmldoc = minidom.parse(svgFile)
    paths=xmldoc.getElementsByTagName('path')
    p=paths[0]

    v=[]

    for p in paths:
        attr=p.attributes
        for k in attr.keys():
            if k == selectedFeature:
                val=attr.get(k).value
                v.append(val)

    return v

def checkSHPFiles():
    # TODO: check shp files, if not exists download...
    pass

def createSVG(jsonFolder, outputFolder):
    for jsonFile in os.listdir(jsonFolder):
        outputFile = "%s.svg"%jsonFile.split('.')[0]
        print "generating %s"%outputFile, ' ',
        call(['kartograph', jsonFolder + '/' + jsonFile, '-o', outputFolder + '/' + outputFile])


if __name__ == '__main__' :
    # Check the shp file
    checkSHPFiles()

    # Get the country codes.
    #countries = getCountryCodes()
    countries = ['TUR', ]
    countryBoxes = getCountryBoxes()
    for code in countries:
        bbox = countryBoxes[code]
        print 'coordinates:', bbox
        createJSON(code, bbox)
        createSVG('json', 'output')
        # TODO: If there is no bbox defined use default values

