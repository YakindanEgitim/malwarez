$(document).ready(function() {

    var countryData = {};
    var countryStats = new Object();

    $script.ready(['jquery', 'kartograph'], function() {
        $(function() {
            showInfoModal('Loading...');
            $.fn.qtip.defaults.style.classes = 'qtip-bootstrap';
            $.fn.qtip.defaults.style.def = false;

            var svgMap = '/s/maps/world-detailed3.svg';
            var layerId = 'countries';
            var map = $K.map('#map');

            var pathId = -1;
            map.loadMap(svgMap, function(map) {
                map.addLayer('countries', {
                    styles: {
                        fill: '#abc',
                        stroke: '#fff'
                    },
                    chunks: 50,
                    tooltips: function(data) {
                        console.log('>' + $(this).attr('id'));
                        var json_data = JSON.stringify(data);
                        console.log('json: ' + json_data);

                        /*console.log('id: ' + is + " | path: " + path);*/
                        /* TODO: this part should be dynamic */
                        if(typeof countryStats[data.name] == 'undefined') {
                            countryStats[data.name] = Math.round((Math.random() * 10000) / 100);
                        }

                        var k='';
                        $.each(data, function(_key, _val) {
                            k += "|" + _key + '='+ _val +'|';
                        });

                        pathId++;
                        countryData["path_" + pathId] = data;

                        return "pathId: " + pathId+ "<br/>" + data.name + "<br/> # of Incident:" + countryStats[data.name] + "<br/> all keys:" + k;

                    }
                });

                /*showGrid(map); */
                /* Izmir 38.2381801째 N, 26.9604492째 E */
                drawPoint(map, 26.9604492, 38.2381801);
                /* Berlin 52.5233째 N, 13.4127째 E */
                drawPoint(map, 13.4127, 52.5233);

                initComponents();

                closeInfoModal();

                var obj = $('path[id="ABW"]');
                console.log("path element: " + obj);

                var json_data = JSON.stringify(obj[0]);
                console.log('json: ' + json_data);
/*
                map.addSymbols({
                    type: $K.Label,
                    data: [{ name: 'Zero', lon: (26.96 - 70), lat: 38.23 }],
                    location: function(d) { return [d.lon, d.lat] },
                    text: function(d) { return d.name; }
                });
*/
            });

        });
    });

    function drawBar(map, x, y, d) {
        var tooltipTitle = '';
        var tooltipText = '';

        var x1 = 0;
        var y1 = 0;
        /* TODO: calculate next point */
        drawShape(map, x, y, x1, y1, tooltipTitle, tooltipText);
    }

    function drawPoint(map, x, y) {
        var tooltipTitle = '';
        var tooltipText = 'Text x: ' + x + ' y: ' + y;
        drawShape(map, x, y, x, y, tooltipTitle, tooltipText);
    }

    function drawShape(map, x, y, x1, y1, tooltipTitle, tooltipText) {
        x = x - 70;
        x1 = x1 - 70;

        var src = new Array(x, y);
        var dst = new Array(x1, y1);
        var shape = map.addGeoPath([src, dst]);
        shape.attr({
            stroke: '#FF0000',
            opacity:.75,
            'stroke-width': 5,
            fill: '#FF0000',
            'stroke-linecap': 'round'
        });

        if (Raphael.svg) {
            setTimeout(function() {
                $(shape.node).qtip({
                    content: {
                        title: tooltipTitle,
                        text: tooltipText
                    },
                    position: {
                        target: 'mouse',
                        viewport: $(window),
                        adjust: { x:7, y:7}
                    }
                }, 0);
            }, 0);

        } else {
            shape.attr('path', map.getGeoPathStr(pts));
        }

        return shape;
    }

    function showGrid(map) {
        var i, j;
        for(j=-90; j<=90; j+=10) {
            for(i=-180; i<=180; i+=10) {
                drawPoint(map, i, j);
            }
        }
    }

    function initComponents() {
        $('.countries').each(function(index) {
            $(this).on('mouseover', function() {
                $(this).css("fill", "#FF0000");
            });
            $(this).on('mouseout', function(){
                $(this).css("fill", "#ABC");
            });
            $(this).on('click', function(){
                openCountryMap($(this).attr('id'));
            });
        });
    }

    function openCountryMap(countryId) {
        /* TODO: Make an AJAX request and show modal */

        /* Update Modal Content */
        /* TODO: Improve it! This is just for demo. */

        $('#myModal').on('shown', function() {
            $(this).css("width", 800);
            $(this).css('margin-left', -390);
            loadCountryMap(countryId);
        });

        /* Show Modal */
        showModal('<div id="countryMap"></div>'
            + '<span style="margin-right:1em">'
            + '<a class="dataset btn btn-primary" data-val="ViolentCrime">Feature 0</a>'
            + '<a class="dataset btn" data-val="Rape">Feature 1</a>'
            + '<a class="dataset btn" data-val="Murder">Feature 2</a>'
            + '</span>'
            + '<span style="margin-right:1em">'
            + '<a class="year btn btn-primary">2011</a>'
            + '<a class="year btn">2010</a>'
            + '</span>'
            + '<span>'
            + '<a class="type btn btn-primary" data-val="" data-maxrad="500">Quantity</a>'
            + '<a class="type btn" data-val="Rate" data-maxrad="250">Density</a>'
            + '<p>' + countryId + ' -- ' + JSON.stringify(countryData[countryId]) /*+ countryData[countryId]['adm0-a3']*/ + '</p>'
            + '</span>');
    }

    function loadCountryMap(countryId) {
        $(function() {
            var countryMap, c, scale, updateMap, symbols = [];

            var countryCode = countryData[countryId].id.toLowerCase();
            var mapPath = '/s/maps/country/map-'+countryCode+'.svg';

            c = $('#countryMap');
            c.height(c.width()*.5);

            countryMap = $K.map('#countryMap');

            countryMap.loadMap(mapPath, function() {
                    countryMap.addLayer('graticule', {
                        styles: {
                            'stroke-opacity': 0.7,
                            'stroke-width': 0.5,
                            'stroke-dasharray': 3.4
                        }
                    });
                    countryMap.addLayer('graticule_1', {
                        styles: {
                            'stroke-opacity': 0.7,
                            'stroke-width': 0.2
                        }
                    });
                    countryMap.addLayer(countryCode, {
                        styles: {
                            'stroke': '#fff',
                            'fill': '#cccccf',
                            'fill-opacity': 0.7
                        }
                    });
                    $.getJSON('/s/maps/us-crime-cities.json', function(crimeCities) {

                        $.each(crimeCities, function(i,city) {
                            $.each(['ViolentCrime','Rape','Murder'], function(i,prop) {
                                $.each(['2011','2010'], function(i,yr) {
                                    city[prop+yr+'Rate'] = city[prop+yr] / city.Population;
                                });
                            });
                        });

                        updateMap = function() {

                            var prop = $('.dataset.btn-primary').data('val')
                                    + $('.year.btn-primary').html()
                                    + $('.type.btn-primary').data('val'),

                                maxRad = $('.type.btn-primary').data('maxrad');

                            scale = $K.scale.linear(crimeCities, prop);

                            $.each(crimeCities, function(i, c) {
                                var bar, pts;

                                pts = [c.ll, [c.ll[0], c.ll[1], scale(c[prop])*maxRad]];

                                if (symbols[i]) {

                                    bar = symbols[i];
                                    if (Raphael.svg) bar.animate({ path: countryMap.getGeoPathStr(pts) }, 500);
                                    else bar.attr('path', countryMap.getGeoPathStr(pts));

                                } else {

                                    bar = countryMap.addGeoPath([c.ll,c.ll]);
                                    bar.attr({
                                        stroke: '#024',
                                        opacity: .6,
                                        'stroke-width': 4,
                                        fill: 'none',
                                        'stroke-linecap': 'square'
                                    });

                                    if (Raphael.svg) {
                                        bar.animate({ path: countryMap.getGeoPathStr(pts) }, 500);
                                        bar.node.setAttribute('title', c.City);
                                        setTimeout(function() {
                                            $(bar.node).qtip({
                                                content: {
                                                    title: c.City,
                                                    text: c[prop]
                                                },
                                                position: {
                                                    target: 'mouse',
                                                    viewport: $(window),
                                                    adjust: { x:7, y:7}
                                                }
                                            }, 800);
                                        });
                                    } else {
                                        bar.attr('path', countryMap.getGeoPathStr(pts));
                                    }
                                    symbols.push(bar);
                                }
                            });

                        }
                        updateMap();
                    });
                $('#loadingImage').hide();
            }, { padding: -150 });

            $('.btn').click(function(event) {
                var tgt = $(event.target), par = tgt.parent();
                $('.btn', par).removeClass('btn-primary');
                tgt.addClass('btn-primary');
                updateMap();
            });
        });
    }

    function showInfoModal(msg) {
        if(typeof msg != 'undefined') {
            $('#myInfoModal .modal-body').html(msg);
        }
        $('#myInfoModal').modal('show');
    }

    function closeInfoModal() {
        $('#myInfoModal').modal('hide');
    }

    function showModal(msg) {
        if(typeof msg != 'undefined') {
            $('#myModal .modal-body').html(msg);
        }
        $('#myModal').modal('show');
    }

    function closeModal() {
        $('#myModal').modal('hide');
    }
});
