var MalwarezSymbols = function(){

    var _sumOfFrequency = 0;

    function _drawPoint(map, x, y, shapeColor) {
        var tooltipTitle = '';
        var tooltipText = ''; //'Text x: ' + x + ' y: ' + y;
        var s = _drawShape(map, x, y, x, y, tooltipTitle, tooltipText, shapeColor);
        setTimeout(function(){s.remove()},3000);
    }

    function _drawShape(map, x, y, x1, y1, tooltipTitle, tooltipText, shapeColor) {
        x = x - 70;
        x1 = x1 - 70;

        var src = new Array(x, y);
        var dst = new Array(x1, y1);
        var shape = map.addGeoPath([src, dst]);

        if(!shapeColor) {
            shapeColor = '#800';
        }

        shape.attr({
            stroke: shapeColor,
            opacity:.50,
            'stroke-width': 5,
            fill: shapeColor,
            'stroke-linecap': 'round'
        });

        if (Raphael.svg) {
            setTimeout(function() {
                $(shape.node).qtip({
                    content: {
                        title: tooltipTitle,
                        text: tooltipText
                    },
                    position: {
                        target: 'mouse',
                        viewport: $(window),
                        adjust: { x:7, y:7}
                    }
                }, 0);
            }, 0);

        } else {
            shape.attr('path', map.getGeoPathStr(pts));
        }

        return shape;
    }

    var barGraphMap;
    var barGraphKey;
    var barGraphDataset;
    var barGraphDatasetIndex;
    var barGraphSymbols;
    var barGraphSymbolsIndex;
    function _drawBarGraph(map, dataset, key) {
        barGraphMap=map;
        barGraphKey=key;
        barGraphSymbolsIndex={};
        barGraphSymbols = [];
        barGraphDataset = dataset;
        barGraphDatasetIndex = {};
        __drawBars(map, barGraphDataset, key);
    }

    function _updateBarGraph(data) {
        if(data.id in barGraphSymbolsIndex) {
            barGraphDatasetIndex[data.id].freq++;
        } else {
            var d = new Object({"id" : data.id, "freq" : 1, "city" : data.city, "longlat": [data.x, data.y]});
            barGraphDatasetIndex[data.id]=d;
            barGraphDataset.push(d);
        }
        __drawBars(barGraphMap, barGraphDataset, barGraphKey);
    }

    function __drawBars(map, dataset, key) {
        var scale = $K.scale.linear(dataset, key);

        $.each(dataset, function(index, d) {
            var bar, pts;
            var x= d.longlat[0];
            var y = d.longlat[1];
            var ll = [x, y];

            pts = [ll, [x, y, scale(d[key])*100]];

            if (barGraphSymbols[index]) {
                /* If we will support multiple key based graph features this is useful otherwise remove this part. */
                bar = barGraphSymbols[index];
                if (Raphael.svg) bar.animate({ path: map.getGeoPathStr(pts) }, 500);
                else bar.attr('path', map.getGeoPathStr(pts));

                // Update the tooltip content
                $(bar.node).qtip('option', 'content.text', '# of activities: ' + d[key]);
            } else {
                bar = map.addGeoPath([ll,ll]);
                bar.attr({
                    stroke: '#024',
                    opacity: .5,
                    'stroke-width': 4,
                    fill: 'none',
                    'stroke-linecap': 'square'
                });
                if (Raphael.svg) {
                    bar.animate({ path: map.getGeoPathStr(pts) }, 500);
                    bar.node.setAttribute('title', d.city);

                    setTimeout(function() {
                        $(bar.node).qtip({
                            content: {
                                title: d.city,
                                text: '# of activities: ' + d[key]
                            },
                            position: {
                                target: 'mouse',
                                viewport: $(window),
                                adjust: { x:7, y:7}
                            }
                        }, 800);
                    });

                } else {
                    bar.attr('path', map.getGeoPathStr(pts));
                }
                barGraphSymbols.push(bar);
                barGraphSymbolsIndex[d.id] = bar;
                barGraphDatasetIndex[d.id] = d;
            }
        });
    }

    return new Object({
        //drawBar         : _drawBar,
        drawPoint       : _drawPoint,
        drawShape       : _drawShape,
        //showGrid        : _showGrid,
        //drawActivities  : _drawActivities,
        drawBarGraph    : _drawBarGraph,
        //updateActivitiesMap : __updateActivitiesMap,
        updateBarGraph  : _updateBarGraph,
        activityDataSet : [],
        activityDataSetIndex : {},
        activityDataSetCountryIndex : {},
        activitySymbols : null
        //addActivityData : _addActivityData,
        //getDataByCountryCode : _getDataByCountryCode,
        //getDataById : _getDataById
    });
}();