var Malwarez = function() {
    var zo;
    var worldMap;
    var activeMainMapFeature;

    $(document).ready(function() {
        $script.ready(['jquery', 'kartograph', 'malwarez-ui'], function() {
            MalwarezPopup.showInfoModal('Loading...');
            initLeftPanel();
            initMenuButtons();

            $(function() {
                $.fn.qtip.defaults.style.classes = 'qtip-bootstrap';
                $.fn.qtip.defaults.style.def = false;

                var svgMap = '/s/maps/world-simple.svg';
                var layerId = 'countries';
                worldMap = $K.map('#map');
                //worldMap = $K.map('#map').showZoomControls();

                var pathId = -1;
                worldMap.loadMap(svgMap, function(map) {
                    map.addLayer('countries', {
                        styles: {
                            fill: '#abc',
                            stroke: '#fff'
                        },
                        chunks: 50,
                        click: function(data, path, event) {
                            // handle mouse clicks
                            // *data* holds the data dictionary of the clicked path
                            // *path* is the raphael object
                            // *event* is the original JavaScript event
                            event.stopPropagation();
                            Malwarez.openCountryMap(data.id);
                        }
                    });
                    clearMainMapFeatureAndStartNewOne(ActivityMap, true);
    /*
                    zo = worldMap.showZoomControls().zc;
                    //zo = new $K.PanAndZoomControl(worldMap);
                    $('#zoomIn').on('click', function(){
                        zo.zoomIn();
                    });

                    $('#zoomOut').on('click', function(){
                        zo.zoomOut();
                    });
    */

                });
            });
        });
    });

    var updateWorldTooltip = function() {
    /*
        worldMap.getLayer('countries').tooltips(function(data) {
            // TODO: Tooltip mechanism should be changed.
            var _freq = 0;
            var d = MalwarezSymbols.getDataByCountryCode(data.id);
            if(d && d.length) {
                for(var i=0; i< d.length; i++) {
                    _freq += d[i].freq;
                }
            }
            return data.name + " # of incidents: " + _freq;
        });
    */
    }

    function _updateCountry(message) {
        MalwarezSymbols.updateBarGraph(message);
    }

    function  _addEvent(message) {
        console.log('_addEvent(message)');
        console.log(message);
        if(! activeMainMapFeature) {
            console.log('can not add new event. map is not ready');
            return;
        }

        message = JSON.parse(message);
        var x = message.x;
        var y = message.y;
        var dataId = x+'_'+y;
        var country = message.country;
        var city = message.city;
        var newData = {"city": city, "freq":1, "id":dataId, "longlat":[x, y], "country": country};

        // Check data if it is country specific.
        if(Malwarez.selectedCountryCode != null) {
            if (message.country.toUpperCase() === Malwarez.selectedCountryCode.toUpperCase()) {
                _updateCountry(message);
            }
        }
        //MalwarezSymbols.updateActivitiesMap(worldMap, 'freq', newData);

        activeMainMapFeature.addEvent(newData);

        // TODO: Update only new event's tooltip content
        //updateWorldTooltip(newData);
    };

    $.asm = {};
    $.asm.panels = 1;
    function initLeftPanel(){
        /*==================================================================*/
        /*==================================================================*/
        /*==================================================================*/
        function sidebar(panels) {
            $.asm.panels = panels;
            if (panels === 1) {
                // $('#content').removeClass('span9');
                // $('#content').addClass('span12 no-sidebar');
                $('#sidebar').animate({
                    left: -280
                });
            } else if (panels === 2) {
                // $('#content').removeClass('span12 no-sidebar');
                // $('#content').addClass('span9');
                $('#sidebar').animate({
                    left: 0
                });
                //$('#mapCanvas').width($('#mapCanvas').parent().width());
                //$('#mapCanvas').height($(window).height() - 50);
                //$('#sidebar').height($(window).height() - 50);
            }
        };

        $('#toggleSidebar').click(function() {
            if ($.asm.panels === 1) {
                $('#toggleSidebar i').addClass('icon-chevron-left');
                $('#toggleSidebar i').removeClass('icon-chevron-right');
                return sidebar(2);
            } else {
                $('#toggleSidebar i').removeClass('icon-chevron-left');
                $('#toggleSidebar i').addClass('icon-chevron-right');
                return sidebar(1);
            }
        });

        /*==================================================================*/
        /*==================================================================*/
        /*==================================================================*/

        var _leftPanelId = 'infoLeftPanel'

        function loadStats(_type, _header) {
            /* TODO: Make it more generic. Send data with header */
            $.getJSON('/top/'+ _type +'/', function(dataset){
                var newId = _leftPanelId+_type;
                $('#'+_leftPanelId).append('<span id="'+ newId +'"></span>');
                $('#'+newId).append('<li class="nav-header">'+_header+'</li>');
                $.each(dataset, function(i, d){
                    if(_type === 'attackerIP') {
                        $('#' + newId).append('<li><a onclick="MalwarezPopup.showAttackerIPDetail(\''+ _type +'\', \''+ _header +'\', \''+ d[0] +'\');">'+d[0] + ' (' + d[1] + ')'+'</a></li>')
                    } else {
                        $('#' + newId).append('<li>'+d[0] + ' (' + d[1] + ')</li>')
                    }
                });
            });
        }

        loadStats('attackerCountry', 'Attacker Country(Hit Count)');
        loadStats('attackerIP', 'Attacker IP(Hit Count)');
        //loadStats('targetIP', 'Target IP(Hit Count)');
        loadStats('attackerPort', 'Attacker Port(Hit Count)');
        loadStats('targetPort', 'Target Port(Hit Count)');
    }

    function initMenuButtons() {
        var aboutContent = ""
        $('#about').on('click', function() {
            aboutContent = $('#about-content').html();
            MalwarezPopup.showInfoModal(aboutContent);
        });

        $('#heatmap').on('click', function(){
            console.log('heatmap clicked.');
            clearMainMapFeatureAndStartNewOne(HeatMap);
        });

        $('#attack-graph').on('click', function(){
            console.log('attack-graph clicked.');
            clearMainMapFeatureAndStartNewOne(ActivityMap);
        });

        $('#malware-activity').on('click', function(){
            console.log('malware-activity clicked.');
            clearMainMapFeatureAndStartNewOne(ActivityMap);
        });
    }

    function clearMainMapFeatureAndStartNewOne(newFeature, firstTime){
        if(! firstTime) {
            MalwarezPopup.showInfoModal('Loading...');
        }
        if(activeMainMapFeature) {
            /*
            if(MalwarezSocket.isConnected) {
                MalwarezSocket.stop();
            }
            */
            var tmp = activeMainMapFeature;
            activeMainMapFeature = null;
            tmp.clean();

        }

        $.getJSON('/api/v1/summary/?format=json&limit=0', function(dataset) {
            /*
            TODO: Replace the tooltip mechanism with this example if possible,
            http://craigsworks.com/projects/qtip2/demos/#shared
            */
            /*
            map.getLayer('countries').tooltips(function(data) {
                // TODO: Tooltip mechanism should be changed.
                var _freq = 0;
                var d = MalwarezSymbols.getDataByCountryCode(data.id);
                if(d && d.length) {
                    for(var i=0; i< d.length; i++) {
                        _freq += d[i].freq;
                    }
                }
                return data.name + " # of incidents: " + _freq;
            });
            */
            updateWorldTooltip();
            console.log(document.URL);
            activeMainMapFeature = new newFeature(worldMap, dataset);
            activeMainMapFeature.init();
            if(firstTime) {
                MalwarezSocket.start();
            }
            MalwarezPopup.closeInfoModal();
        });
    }

    function _openCountryMap(countryId) {
        Malwarez.selectedCountryCode = countryId;
        var postProcessCallback =  MalwarezSymbols.drawBarGraph;
        MalwarezPopup.showCountryMap(countryId, postProcessCallback);
    }

    return new Object({
        addEvent    : _addEvent,
        selectedCountryCode : null,
        openCountryMap : _openCountryMap
    });
}();