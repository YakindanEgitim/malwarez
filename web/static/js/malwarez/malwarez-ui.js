var Malwarez = function() {
    var zo;
    var worldMap;

    $(document).ready(function() {
        $script.ready(['jquery', 'kartograph', 'malwarez-ui'], function() {
            initLeftPanel();
            initMenuButtons();

            $(function() {
                MalwarezPopup.showInfoModal('Loading...');

                $.fn.qtip.defaults.style.classes = 'qtip-bootstrap';
                $.fn.qtip.defaults.style.def = false;

                var svgMap = '/s/maps/world-simple.svg';
                var layerId = 'countries';
                worldMap = $K.map('#map');
                //worldMap = $K.map('#map').showZoomControls();

                var pathId = -1;
                worldMap.loadMap(svgMap, function(map) {
                    map.addLayer('countries', {
                        styles: {
                            fill: '#abc',
                            stroke: '#fff'
                        },
                        chunks: 50,
                        click: function(data, path, event) {
                            // handle mouse clicks
                            // *data* holds the data dictionary of the clicked path
                            // *path* is the raphael object
                            // *event* is the original JavaScript event
                            event.stopPropagation();
                            Malwarez.openCountryMap(data.id);
                        },
                        mouseenter: function(data, path, event) {
                            path.attr("fill", "#FF0000");
                        },
                        mouseleave:function(data, path, event) {
                            path.attr("fill", "#ABC");
                        }
                    });
                    MalwarezPopup.closeInfoModal();

                    // This dataset will be fetch from rest api
                    $.getJSON('/api/v1/summary/?format=json&limit=0', function(dataset) {
                        $.each(dataset.objects, function(i, d) {
                            /* Simple indexing for socket.io updates */
                            MalwarezSymbols.addActivityData(d);
                        });

                        /*
                        TODO: Replace the tooltip mechanism with this example if possible,
                        http://craigsworks.com/projects/qtip2/demos/#shared
                        */
                        map.getLayer('countries').tooltips(function(data) {
                            // TODO: Tooltip mechanism should be changed.
                            var _freq = 0;
                            var d = MalwarezSymbols.getDataByCountryCode(data.id);
                            if(d && d.length) {
                                for(var i=0; i< d.length; i++) {
                                    _freq += d[i].freq;
                                }
                            }
                            return data.name + " # of incidents: " + _freq;
                        });
                        MalwarezSymbols.drawActivities(worldMap, 'freq');
                    });
    /*
                    zo = worldMap.showZoomControls().zc;
                    //zo = new $K.PanAndZoomControl(worldMap);
                    $('#zoomIn').on('click', function(){
                        zo.zoomIn();
                    });

                    $('#zoomOut').on('click', function(){
                        zo.zoomOut();
                    });
    */
                    MalwarezSocket.start();
                });
            });
        });
    });

    function _updateCountry(message) {
        MalwarezSymbols.updateBarGraph(message);
    }

    function  _addEvent(message) {
        message = JSON.parse(message);
        var x = message.x;
        var y = message.y;
        var dataId = x+'_'+y;
        var country = message.country;

        // Check data if it is country specific.
        if(Malwarez.selectedCountryCode != null) {
            if (message.country.toUpperCase() === Malwarez.selectedCountryCode.toUpperCase()) {
                _updateCountry(message);
            }
        }

        // TODO: This point should be removed after some time...
        MalwarezSymbols.drawPoint(worldMap, x, y, '#FFFF00');

        // get data
        var updatedData = MalwarezSymbols.getDataById(dataId);
        //var updatedData = MalwarezSymbols.activityDataSetIndex[dataId];
        if(updatedData) {
            updatedData.freq += 1;
            MalwarezSymbols.updateActivitiesMap('freq');
        } else {
            var city = message.city;
            var newData = {"city": city, "freq":1, "id":dataId, "longlat":[x, y], "country": country};
            MalwarezSymbols.addActivityData(newData);
            MalwarezSymbols.activitySymbols.add(newData);
            MalwarezSymbols.activitySymbols.layout().render();
        }
    };

    function initLeftPanel(){
        var _leftPanelId = 'infoLeftPanel'

        function loadStats(_type, _header) {
            /* TODO: Make it more generic. Send data with header */
            $.getJSON('/top/'+ _type +'/', function(dataset){
                var newId = _leftPanelId+_type;
                $('#'+_leftPanelId).append('<span id="'+ newId +'"></span>');
                $('#'+newId).append('<li class="nav-header">'+_header+'</li>');
                $.each(dataset, function(i, d){
                    $('#' + newId).append('<li>'+d[0] + ' (' + d[1] + ')'+'</li>')
                });
            });
        }

        loadStats('attackerCountry', 'Attacker Country(Hit Count)');
        loadStats('attackerIP', 'Attacker IP(Hit Count)');
        loadStats('targetIP', 'Target IP(Hit Count)');
        loadStats('attackerPort', 'Attacker Port(Hit Count)');
        loadStats('targetPort', 'Target Port(Hit Count)');
    }

    function initMenuButtons() {
        // TODO: Read this from an span of index.html
        var aboutContent = "Hello World."
        $('#about').on('click', function() {
            MalwarezPopup.showInfoModal(aboutContent);
        });

        $('#heatmap').on('click', function(){
            console.log('heatmap clicked.');
        });

        $('#attack-graph').on('click', function(){
            console.log('attack-graph clicked.');
        });

        $('#malware-activity').on('click', function(){
            console.log('malware-activity clicked.');
        });
    }

    function _openCountryMap(countryId) {
        Malwarez.selectedCountryCode = countryId;
        var postProcessCallback =  MalwarezSymbols.drawBarGraph;
        MalwarezPopup.showCountryMap(countryId, postProcessCallback);
    }

    return new Object({
        addEvent    : _addEvent,
        selectedCountryCode : null,
        openCountryMap : _openCountryMap
    });
}();