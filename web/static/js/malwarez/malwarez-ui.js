var Malwarez = function() {
    var zo;
    var worldMap;
    var countryData = {};
    var countryStats = new Object();
    var eventStats = {}

    $(document).ready(function() {
        $script.ready(['jquery', 'kartograph', 'malwarez-ui'], function() {
            $(function() {
                MalwarezPopup.showInfoModal('Loading...');

                $.fn.qtip.defaults.style.classes = 'qtip-bootstrap';
                $.fn.qtip.defaults.style.def = false;

                var svgMap = '/s/maps/world-simple.svg';
                var layerId = 'countries';
                worldMap = $K.map('#map');
                //worldMap = $K.map('#map').showZoomControls();

                var pathId = -1;
                worldMap.loadMap(svgMap, function(map) {
                    map.addLayer('countries', {
                        styles: {
                            fill: '#abc',
                            stroke: '#fff'
                        },
                        chunks: 50,
                        tooltips: function(data) {
                            /* TODO: this part should be dynamic */
                            if(typeof countryStats[data.name] == 'undefined') {
                                countryStats[data.name] = Math.round((Math.random() * 10000) / 100);
                            }

                            pathId++;
                            countryData["path_" + pathId] = data;
                            return "pathId: " + pathId+ "<br/>" + data.name + "<br/> # of Incident:" + countryStats[data.name];
                        },
                        click: function(data, path, event) {
                            // handle mouse clicks
                            // *data* holds the data dictionary of the clicked path
                            // *path* is the raphael object
                            // *event* is the original JavaScript event
                            var countryId=data.id
                            var postProcessCallback =  MalwarezSymbols.drawBarGraph;
                            MalwarezPopup.showCountryMap(data, postProcessCallback);
                        },
                        mouseenter: function(data, path, event) {
                            path.attr("fill", "#FF0000");
                        },
                        mouseleave:function(data, path, event) {
                            path.attr("fill", "#ABC");
                        }
                    });

                    /* countryData = layer.getPathsData(); */
                    /* Izmir 38.2381801째 N, 26.9604492째 E */
                    //MalwarezSymbols.drawPoint(worldMap, 26.9604492, 38.2381801);
                    /* Berlin 52.5233째 N, 13.4127째 E */
                    //MalwarezSymbols.drawPoint(worldMap, 13.4127, 52.5233);
                    MalwarezPopup.closeInfoModal();

                    // This dataset will be fetch from rest api
                    $.getJSON('http://127.0.0.1:8000/api/summary/?format=json&limit=0', function(dataset) {
                        $.each(dataset.objects, function(d) {
                            /* Simple indexing for socket.io updates */
                            eventStats[d.id] = d;
                        });
                        MalwarezSymbols.drawActivities(worldMap, dataset.objects, 'freq');
                    });
    /*
                    zo = worldMap.showZoomControls().zc;
                    //zo = new $K.PanAndZoomControl(worldMap);
                    $('#zoomIn').on('click', function(){
                        zo.zoomIn();
                    });

                    $('#zoomOut').on('click', function(){
                        zo.zoomOut();
                    });
    */

                    /*
                    var dataset = [
                        {"city":"Izmir", "freq":40, "longlat":[26.9604492, 38.2381801]},
                        {"city":"Berlin", "freq":20, "longlat":[13.4127, 52.5233]},
                        {"city":"Halifax", "freq":30, 'longlat':[-62.578125, 44.8091217]}
                    ];
                    */
                    MalwarezSocket.start();
                });
            });
        });
    });

    function  _addEvent(message) {
        message = JSON.parse(message);
        var x = message.x;
        var y = message.y;
        var dataId = x+'_'+y

        MalwarezSymbols.drawPoint(worldMap, x, y);

        // get data
        var updatedData = eventStats[dataId];
        if(updatedData) {
            eventStats[dataId].freq += 1;
        } else {
            var city = message.city;
            var newData = {"city": city, "freq":1, "id":dataId, "longlat":[x, y]};
            eventStats[dataId] = newData;
            MalwarezSymbols.activityDataSet.push(newData);
            MalwarezSymbols.activitySymbols.add(newData, 'freq');
            /*
            var ll = newData.longlat;
            var bar = worldMap.addGeoPath([ll,ll]);
            bar.attr({
                type: $K.Bubble,
                data : newData,
                r: (Math.sqrt(scale(data[key])) * 12),
                stroke: '#024',
                opacity: .5,
                'stroke-width': 4,
                fill: 'none'
                //'stroke-linecap': 'square'
            });
            var pts = [ll, ll];
            bar.attr('path', worldMap.getGeoPathStr(pts));
            */
        }
    };

    return new Object({
        addEvent    : _addEvent
    });
}();