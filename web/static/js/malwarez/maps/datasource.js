/* Sample Implementation for Data Source class
var DataSource;

$(function() {
    // Constructor
    DataSource = function() {};
    // Update function
    DataSource.prototype.addEvent = function(data) {};
    // Getter functions
    DataSource.prototype.getDataByCountryCode = function(countryCode) {};
    DataSource.prototype.getDataByLocation = function(locationId) {};
    DataSource.prototype.getData = function() {};
});

*/

var DataSource;
$(function() {

    // Constructor
    DataSource = function(dataset, key) {
        var me = this;
        me.data = [];
        me.dataIndexCountry = {};
        me.dataIndexLocation = {};
        me.dataFrequencyCountry = {};
        me.sumOfFrequency = 0;
        me.key = key ? key : 'freq';

        $.each(dataset.objects, function(i, d) {
           me.addData(d);
        });
    };


    /* @private */
    function initDictionaryIfKeyNotExists(dictionary, key) {
        var result = false;
        if(! dictionary.hasOwnProperty(key)) {
            dictionary[key] = [];
            result = true;
        }
        return result;
    }

    // Update function
    /* Returns true if the given data has a new id  */
    DataSource.prototype.addData = function(data) {
        var me = this;
        var isNewData = false;

        /* data array */
        me.data.push(data);

        /* country based index */
        initDictionaryIfKeyNotExists(me.dataIndexCountry, data.country);
        me.dataIndexCountry[data.country].push(data);

        /* location based index */
        isNewData = initDictionaryIfKeyNotExists(me.dataIndexLocation, data.id);
        me.dataIndexLocation[data.id].push(data);

        /* country based frequency data */
        if(! me.dataFrequencyCountry.hasOwnProperty(data.country)) {
            me.dataFrequencyCountry[data.country] = {"country" : data.country, "freq" : 0};
        }

        me.dataFrequencyCountry[data.country].freq += data.freq;
        me.sumOfFrequency += data.freq;

        return isNewData;
    };

    /* private getter function. checks for the key return empty array if key not exists... */
    function get(dict, key) {
        if(key) {
            if(dict.hasOwnProperty(key)) {
                return dict[key];
            }
        }
        return [];
    };

    // Getter functions
    DataSource.prototype.getCountryFrequency = function(countryCode) {
        var me = this;
        if(countryCode) {
            return get(me.dataFrequencyCountry, countryCode);
        } else {
            return me.dataFrequencyCountry;
        }
    };

    DataSource.prototype.getDataByCountryCode = function(countryCode) {
        var me = this;
        return get(me.dataIndexCountry, countryCode);
    };

    DataSource.prototype.getDataByLocation = function(locationId) {
        var me = this;
        return get(me.dataIndexLocation, locationId);
    };

    DataSource.prototype.getData = function() {
        var me = this;
        return me.data;
    };

    DataSource.prototype.getSumOfFrequency = function() {
        var me = this;
        return me.sumOfFrequency;
    };
});
